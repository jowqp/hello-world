# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Build and Deploy to GKE

on:
  release:
    types: [created]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: us-central1-c   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      ame: cached-docker-build-push
  # You may pin to the exact commit or the version.
  # uses: devmasx/cached-docker-build-push@08c3804a6bad9d1ef911f16a97481d9aafb3a35a
  uses: devmasx/cached-docker-build-push@v0.2.0
  with:
    # Image name, required
    image_name: 
    # Image tag, default $GITHUB_SHA
    image_tag: # optional
    # Image name for the cache image, default $IMAGE_NAME:cache-$CACHE_STAGE_TARGET
    cache_image_name: # optional
    # Name of the stage target for use in cache, two images will be compiled, the stage target and the last stage.
    cache_stage_target: # optional
    # Add any docker build flag, --build-params='--build-arg=TOKEN=$TOKEN'
    build_params: # optional
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    ush "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
name: Cached Dependencies
  uses: ktmud/cached-dependencies@master
  jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['8', '10', '12']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: npm install, build and test
      run: |
        npm install
        npm run build --if-present
        npm test
        steps:
- run: npm publish
  if: github.event == 'push'
  - name: Install Dependencies
  run: npm install
  - name: Setup Node
  uses: actions/setup-node@v1
  with:
    node-version: '10.x'
    jobs:
  my_job:
    name: deploy to staging
    runs-on: ubuntu-18.04
    on:
  workflow_dispatch:
  on:
  push:
    branches:
    - main
    - release/*
      on:
  pull_request:
    branches:
    - main
      on:
  schedule:
  - cron: "0 2 * * 1-5"
    on:
  workflow_dispatch:
  ubuntu-latest, ubuntu-18.04,or  ubuntu-16.04
windows-latest or windows-2019
macos-latest or macos-10.15
name: cachepurger
  # You may pin to the exact commit or the version.
  # uses: CyrusRoshan/cachepurger@0cc64723294eed46b35567f9ba5fac934bbdf73a
  uses: CyrusRoshan/cachepurger@v1.0
  with:
    # URL that hosts published files
    url-prefix: 
    # Cloudflare Zone ID
    zone-id: 
    # Scoped Cloudflare API Token. Either use this, or API Key + Email
    api-token: # optional
    # Cloudflare Global API Key
    api-key: # optional
    # Cloudflare Email
    email: # optional
    # 
    from-commit: # optional, default is ${{ github.event.before }}
    # 
    to-commit: # optional, default is ${{ github.sha }}
    name: Coveralls GitHub Action
  # You may pin to the exact commit or the version.
  # uses: coverallsapp/github-action@8cbef1dea373ebce56de0a14c68d6267baa10b44
  uses: coverallsapp/github-action@v1.1.2
  with:
    # 
    github-token: 
    # Path to lcov file
    path-to-lcov: # default is ./coverage/lcov.info
    # Job flag name, e.g. "Unit", "Functional", or "Integration". Will be shown in the Coveralls UI.
    flag-name: # optional
    # Set to true if you are running parallel jobs, then use "parallel_finished: true" for the last action.
    parallel: # optional
    # Set to true for the last action when using "parallel: true".
    parallel-finished: # optional
    # Coveralls Enterprise server (more info: https://enterprise.coveralls.io)
    coveralls-endpoint: # optional, default is https://coveralls.io
    # The root folder of the project that originally ran the tests
    base-path: # optional
    name: HTTP Endpoints Timming
  # You may pin to the exact commit or the version.
  # uses: FlavioAandres/call-endpoints-action@39fadd2fff5ff17daf915982499e591d7d69c212
  uses: FlavioAandres/call-endpoints-action@v1.0.1
  with:
    # A JSON File with the necessary information to run the tests.
    config-file: 
    - name: MLflow Tracking
  # You may pin to the exact commit or the version.
  # uses: alejio/mlflow-tracking-action@07bd39411ec2b5b1a1a20ae388a121a2572f8ad8
  uses: alejio/mlflow-tracking-action@v1.1.0
  with:
    # The tracking URI of your MLflow remote server, including username and password. Example "http://ec2-1-2-345-678.eu-west-2.compute.amazonaws.com".
    MLFLOW_TRACKING_URI: 
    - name: Get Runs From Weights & Biases
  # You may pin to the exact commit or the version.
  # uses: machine-learning-apps/wandb-action@ea8c99cb8230d7ec3d1bbe087a5f1853843b93b9
  uses: machine-learning-apps/wandb-action@1.1
  name: Azure Machine Learning Workspace
  uses: Azure/aml-workspace@v1.16.0
  with:
    # Paste output of `az ad sp create-for-rbac --name <your-sp-name> --role contributor --scopes /subscriptions/<your-subscriptionId>/resourceGroups/<your-rg> --sdk-auth` as value of secret variable: AZURE_CREDENTIALS
    azure_credentials: 
    # JSON file including the parameters of the workspace.
    parameters_file: # optional, default is workspace.json
    - name: Azure Machine Learning Run Action
  uses: Azure/aml-run@v1.16.0
  with:
    # Paste output of `az ad sp create-for-rbac --name <your-sp-name> --role contributor --scopes /subscriptions/<your-subscriptionId>/resourceGroups/<your-rg> --sdk-auth` as value of secret variable: AZURE_CREDENTIALS
    azure_credentials: 
    # JSON file including the parameters of the run.
    parameters_file: # default is run.json
    - name: Azure Machine Learning Deploy Action
  uses: Azure/aml-deploy@v1.16.0
  with:
    # Paste output of `az ad sp create-for-rbac --name <your-sp-name> --role contributor --scopes /subscriptions/<your-subscriptionId>/resourceGroups/<your-rg> --sdk-auth` as value of secret variable: AZURE_CREDENTIALS
    azure_credentials: 
    # Name of the model that will be deployed
    model_name: 
    # Version of the model that will be deployed
    model_version: 
    # JSON file including the parameters for deployment. This looks in the .ml/.azure/ directory
    parameters_file: # default is deploy.json
    - name: Azure Machine Learning Compute Action
  uses: Azure/aml-compute@v1.16.0
  with:
    # Paste output of `az ad sp create-for-rbac --name <your-sp-name> --role contributor --scopes /subscriptions/<your-subscriptionId>/resourceGroups/<your-rg> --sdk-auth` as value of secret variable: AZURE_CREDENTIALS
    azure_credentials: 
    # JSON file including the parameters of the compute.
    parameters_file: # default is compute.json
    - name: Azure Machine Learning Register Model Action
  uses: Azure/aml-registermodel@v1.16.0
  with:
    # Paste output of `az ad sp create-for
    - name: Submit Argo Workflows to GKE
  # You may pin to the exact commit or the version.
  # uses: machine-learning-apps/gke-argo@86edd034aaba1498dbae6465cf994de90be6a4b2
  uses: machine-learning-apps/gke-argo@1.01
  - name: Orthograph-err
  # You may pin to the exact commit or the version.
  # uses: place-labs/orthograph-err@f9adc1a6ba432554c5f5e695dd1813ae6380ff93
  uses: place-labs/orthograph-err@v1.2.0
  with:
    # File or glob pattern to proofread
    path: # optional, default is {,!(node_modules)/**/}*.md
    # Github API token to use for publishing check results
    token: # default is ${{ github.token }}
    - name: FRC Build & Test
  # You may pin to the exact commit or the version.
  # uses: Ewpratten/FRC-actions@26e9116aa1d63cd4493bc435a643ed6f9b6c2fba
  uses: Ewpratten/FRC-actions@v1.1.2
  with:
    # What should be run? One of: ["all", "build", "unit_test"]
    build_mode: # optional, default is all
    - name: Wechat Work Robot Message
  # You may pin to the exact commit or the version.
  # uses: fifsky/wechat-work-action@ce9aae16b7da3943dce059d8a2f3883cea1fcb66
  uses: fifsky/wechat-work-action@v0.0.1
  with:
    # wechat work robot webhook
    url: 
    # message type
    type: # optional, default is text
    # message content
    content: 
    # at users
    at: # optional
    - name: Dingtalk Robot Messages
  # You may pin to the exact commit or the version.
  # uses: x-actions/dingtalk@d6b3d2e377c78ed86834050255f9bebc77656fae
  uses: x-actions/dingtalk@v1
  with:
    # robot webhook access token
    DINGTALK_ACC
    - name: Robot Framework
  # You may pin to the exact commit or the version.
  # uses: joonvena/robotframework-docker-action@ee7e1556a4ca45b8ed69aea8bab25daf06145419
  uses: joonvena/robotframework-docker-action@v0.1
  - name: Robot Reporter
  # You may pin to the exact commit or the version.
  # uses: joonvena/robotframework-reporter-action@8afce7e8983b4b1f4f982e536917a09bcc2d974e
  uses: joonvena/robotframework-reporter-action@v0.1
  - name: Cache
  uses: actions/cache@v2.1.3
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    - name: Microblog-Action
  # You may pin to the exact commit or the version.
  # uses: herschel666/microblog-action@8598019d4a03b2c72b4efdb0607e1ccd30f05623
  uses: herschel666/microblog-action@v0.3.0
  with:
    # Github Access Token
    repo-token: 
    # Full site URL including base path if it exists.
    url: 
    # Title of the Microblog
    title: # optional
    # Description of the Microblog
    description: # optional
    # Theme of the Microblog
    theme: # optional, default is new.css
    # Date format based on https://date-fns.org/v2.10.0/docs/format
    date-format: # optional, default is d.M.yyyy H:mm
    # Amount of posts per page
    posts-per-page: # optional, default is 10
    # Path to a CSS file with custom styles relative to the repo root
    custom-styles: # optional
    # A glob or a list of globs pointing to markdown files which will be rendered as static pages
    pages: # optional, default is pages/*.md
    # Set the microblog's frontpage to be one of the static pages
    static-frontpage: # optional
    # Only publish issues with a certain label
    label: # optional
    # Only publish closed issues
    closed: # optional
    # Language of the Microblog
    lang: # optional, default is en
    # Label of "next"-link
    i18n.next: # optional, default is next
    # Label of "prev"-link
    i18n.prev: # optional, default is previous
    # Label of "Posts"-link
    i18n.posts: # optional, default is Posts
    - name: Checkmarx Scan
  # You may pin to the exact commit or the version.
  # uses: checkmarx-ts/checkmarx-github-action@bb9101ed82fa9485fe5c6677f5608c3a8c077f25
  uses: checkmarx-ts/checkmarx-github-action@v1.0.3
  with:
    # Checkmarx CLI Action
    cxAction: # optional, default is Scan
    # Checkmarx Version
    cxVersion: # optional, default is 8.9
    # IP address or resolvable name of CxSAST web server.
    cxServer: # default is https://company.checkmarx.com
    # Checkmarx Username
    cxUsername: # default is first.last@company.com
    # Checkmarx Token
    cxToken: # optional, default is 
    # Checkmarx Password
    cxPassword: # default is 
    # Checkmarx Team
    cxTeam: # default is 
    # Checkmarx Project Name
    cxProject: # optional, default is 
    # If not provided, will use preset defined in existing project or, for a new project, the default preset.
    cxPreset: # optional, default is Checkmarx Default
    # Threshold for High Severity Vulnerabilities
    cxHigh: # optional, default is -1
    # Threshold for Medium Severity Vulnerabilities
    cxMedium: # optional, default is -1
    # Threshold for Low Severity Vulnerabilities
    cxLow: # optional, default is -1
    # Saves a comment with the scan results. For example -comment important scan.
    cxComment: # optional, default is 
    # Force scan on source code, which has not been changed since the last scan of the same project. (Not compatible with -Incremental option.)
    cxForceScan: # optional
    # Run incremental scan instead of a full scan.
    cxIncremental: # optional
    # Comma separated list of folder name patterns to exclude from scan. For example, exclude all test and log folders: -locationPathExclude test*,log_*
    cxExcludeFolders: # optional, default is 
    # Comma separated list of file name patterns to exclude from scan. For example, exclude all files with .class extension: -locationFilesExclude *.class
    cxExcludeFiles: # optional, default is 
    # Code language configuration. Possible values are : Default Configuration, Japanese (Shift-JIS). If configuration is not set, Default Configuration is used.
    cxConfiguration: # optional, default is Default Configuration
    # Scan will not be visible to other users.
    cxPrivate: # optional
    # SAST Scan Report in XML format
    cxReportXML: # optional, default is 
    # SAST Scan Report in PDF format
    cxReportPDF: # optional, default is 
    # SAST Scan Report in RTF format
    cxReportRTF: # optional, default is 
    # SAST Scan Report in CSV format
    cxReportCSV: # optional, default is 
    # Log file to be created.
    cxLog: # optional, default is 
    # Turns on verbose mode. All messages and events will be sent to the console or log file.
    cxVerbose: # optional, default is true
    # OSA high severity vulnerability threshold. If the number of high vulnerabilities exceeds the threshold, scan will end with an error (see Error/Exit Codes).
    cxOsaHigh: # optional, default is -1
    # OSA medium severity vulnerability threshold. If the number of medium vulnerabilities exceeds the threshold, scan will end with an error (see Error/Exit Codes).
    cxOsaMedium: # optional, default is -1
    # OSA low severity vulnerability threshold. If the number of high vulnerabilities exceeds the threshold, scan will end with an error (see Error/Exit Codes).
    cxOsaLow: # optional, default is -1
    # Local or network path to sources or source repository branch. May include multiple list of folders (local or shared) separated by comma.
    cxOsaLocationPath: # optional, default is 
    # Comma separated list of file extensions to extract in the OSA scan. For example: -OsaArchiveToExtract *.zip extracts only files with .zip extension.
    cxOsaArchiveToExtract: # optional, default is 
    # Comma separated list of file name patterns to exclude from the OSA scan. For example: *.dll will include only dll files.
    cxOsaFilesInclude: # optional, default is 
    # Comma separated list of file name patterns to exclude from the OSA scan. Exclude extensions by using *.<extension>, or exclude files by using */<file>. Examples: -OsaFilesExclude *.class excludes all files which start with the .class. Examples: -OsaFilesExclude */plexus-utils-1.5.6.jar excludes all files which start with plexus-utils-1.5.6.jar.
    cxOsaFilesExclude: # optional, default is 
    # Comma separated list of folder path patterns to exclude from the OSA scan. For example: -OsaPathExclude test excludes all folders which start with test prefix.
    cxOsaPathExclude: # optional, default is 
    # Generate CxOSA HTML report.
    cxOsaReportHtml: # optional, default is 
    # Generate CxOSA PDF report.
    cxOsaReportPDF: # optional, default is 
    # Extraction depth of files to include in the OSA scan.
    cxOsaDepth: # optional, default is 
    # Retrieve all supported package dependencies before performing OSA scan (see Remarks section).
    cxExecutePackageDependency: # optional
    # Generate CxOSA JSON report.
    cxOsaJson: # optional, default is 
    # SCA Username
    cxScaUsername: # optional, default is 
    # SCA Password
    cxScaPassword: # optional, default is 
    # SCA Account Name
    cxScaAccount: # optional, default is 
    # SCA API URL
    cxScaApiUrl: # optional, default is 
    # SCA Access Control URL
    cxScaAcessControlUrl: # optional, default is 
    # SCA Web App URL
    cxScaWebAppUrl: # optional, default is 
    # SCA High Threshold
    cxScaHigh: # optional, default is -1
    # SCA Medium Threshold
    cxScaMedium: # optional, default is -1
    # SCA Low Threshold
    cxScaLow: # optional, default is -1
    # SCA Location Path
    cxScaLocationPath: # optional, default is 
    # SCA Files Include
    cxScaFilesInclude: # optional, default is 
    # SCA Files Exclude
    cxScaFilesExclude: # optional, default is 
    # SCA Folders Exclude
    cxScaPathExclude: # optional, default is 
    # This parameter will break the build if the CxOSA policy is violated.
    cxCheckPolicy: # optional
    # Skip Checkmarx Action Step if Fail
    cxSkipIfFail: # optional
    # Trust Self-signed Certificates
    cxTrustedCertificates: # optional
    # Github Token Secret
    cxGithubToken: # optional, default is 
    # Create Github Issues
    cxGithubIssues: # optional
    # Github Labels for Issues created
    cxGithubLabels: # optional, default is bug
    # Github Assignees for Issues created
    cxGithubAssignees: # optional, default is 
    # Github Milestone for Issues created
    cxGithubMilestone: # optional
    - name: Checkout
  uses: actions/checkout@v2.3.4
  with:
    # Repository name with owner. For example, actions/checkout
    repository: # optional, default is ${{ github.repository }}
    # The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event.  Otherwise, uses the default branch.

    ref: # optional
    # Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT.

We recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary.

[Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

    token: # optional, default is ${{ github.token }}
    # SSH key used to fetch the repository. The SSH key is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the SSH key.

We recommend using a service account with the least permissions necessary.

[Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

    ssh-key: # optional
    # Known hosts in addition to the user and global host key database. The public SSH keys for a host may be obtained using the utility `ssh-keyscan`. For example, `ssh-keyscan github.com`. The public key for github.com is always implicitly added.

    ssh-known-hosts: # optional
    # Whether to perform strict host key checking. When true, adds the options `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to configure additional hosts.

    ssh-strict: # optional, default is true
    # Whether to configure the token or SSH key with the local git config
    persist-credentials: # optional, default is true
    # Relative path under $GITHUB_WORKSPACE to place the repository
    path: # optional
    # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
    clean: # optional, default is true
    # Number of commits to fetch. 0 indicates all history for all branches and tags.
    fetch-depth: # optional, default is 1
    # Whether to download Git-LFS files
    lfs: # optional
    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.

When the `ssh-key` input is not provided, SSH URLs beginning with `git@github.com:` are converted to HTTPS.

    submodules: # optional
    - name: HashiCorp's Link Checker
  # You may pin to the exact commit or the version.
  # uses: hashicorp/gh-action-check-broken-links@9da9ec2d83f88fe981a856c3f03aca64e68af90c
  uses: hashicorp/gh-action-check-broken-links@v1
  with:
    # The base URL that links will be resolved against
    baseUrl: 
    # A list of files that will be scanned for the presence of links
    files: # optional
    # A newline delmited list of URLs that will be ignored
    whitelist: # optional
   
- name: Amazon Chime "Chime Webhook" Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: amazon-archives/amazon-chime-github-webhook@927b7f3db4890c8512be4e04c1e335804058ade3
  uses: amazon-archives/amazon-chime-github-webhook@v1
  with:
    # The URL of the Amazon Chime Webhook
    webhook: 
    # The message that is send to the Amazon Chime chat room
    message: 
    # Do not send the message using markdown syntax
    no-markdown: # optional, default is 0 
   - name: Checkov Github Action
  # You may pin to the exact commit or the version.
  # uses: bridgecrewio/checkov-action@5c6375613e29384c477e33a6bfd36a351dde805d
  uses: bridgecrewio/checkov-action@v13
  with:
    # directory with infrastructure code to scan
    directory: # optional, default is .
    # Run scan only on a specific check identifier (comma separated)
    check: # optional
    # Run scan on all checks but a specific check identifier (comma separated)
    skip_check: # optional
    # display only failed checks
    quiet: # optional
     - name: Checkmarx CxFlow Action
  # You may pin to the exact commit or the version.
  # uses: checkmarx-ts/checkmarx-cxflow-github-action@fe2a395cbbee31268470d92b6c53ebc483005f0f
  uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.1
  with:
    # Provide Checkmarx URL
    checkmarx_url: # default is 
    # Select a Checkmarx Team
    team: # default is /CxServer/SP/Company
    # Provide Checkmarx Username
    checkmarx_username: # default is 
    # Provide Checkmarx Password
    checkmarx_password: # default is 
    # Provide Checkmarx Client Secret
    checkmarx_client_secret: # default is 
    # Select a Checkmarx Project
    project: # default is 
    # Select an Application Name used by downstream bug tracker systems
    app: # optional, default is SampleApp
    # Select a Checkmarx Preset
    preset: # optional, default is Checkmarx Default
    # Break build based on Checkmarx findings?
    break_build: # optional
    # Bug tracker for the scan results.
    bug_tracker: # optional, default is Sarif
    # Incremental Scans?
    incremental: # optional, default is true
    # Additional CLI parameters
    params: # optional, default is 
    # GitHub API Token
    github_token: # optional, default is ${{ github.token }}
    # Vulnerability Scanners (sast, sca, ast, cxgo)
    scanners: # default is 
    # Provide SCA API URL
    sca_api_url: # optional, default is https://api.scacheckmarx.com
    # Provide SCA APP URL
    sca_app_url: # optional, default is https://sca.scacheckmarx.com
    # Provide SCA Access Control URL
    sca_access_control_url: # optional, default is https://platform.checkmarx.net
    # Provide SCA Tenant
    sca_tenant: # optional, default is 
    # Provide SCA Username
    sca_username: # optional, default is 
    # Provide SCA Password
    sca_password: # optional, default is 
    # Provide CxGo Client Secret
    cxgo_client_secret: # optional, default is 
    # Provide CxGo API URL
    cxgo_base_url: # optional, default is https://api.checkmarx.net
    # Provide CxGo Portal URL
    cxgo_portal_url: # optional, default is https://cloud.checkmarx.net
    # Provide AST API URL
    ast_api_url: # optional, default is 
    # Provide AST WebApp URL
    ast_webapp_url: # optional, default is 
    # Provide AST Client ID
    ast_client_id: # optional, default is 
    # Provide AST Client Secret
    ast_client_secret: # optional, default is
    - name: Lightstep Pre-Deploy Check
  # You may pin to the exact commit or the version.
  # uses: lightstep/lightstep-action-predeploy@22bec553a6d0fb3de5026acb1159085601f76408
  uses: lightstep/lightstep-action-predeploy@v0.2.6
  with:
    # The organization associated with your Lightstep account (usually your company name)
    lightstep_organization: # optional
    # The Lightstep project associated with this repository
    lightstep_project: # optional
    # The key to access the Lightstep Public API
    lightstep_api_key: # optional
    # The token to access the Rollbar API
    rollbar_api_token: # optional
    # The token to access the PagerDuty API
    pagerduty_api_token: # optional
    # If set to true, collapse all conditions to a single table row
    rollup_conditions: # optional
    # If set to true, will not add a comment to pull-requests
    disable_comment: # optional

- name: Check for Changed Files
  # You may pin to the exact commit or the version.
  # uses: brettcannon/check-for-changed-files@dca07fa7e4dabc2b82f3664319ee665ed4c48d3d
  uses: brettcannon/check-for-changed-files@v1.0.1
  with:
    # Glob pattern for changed file to check for
    file-pattern: 
    # Glob pattern that guards whether the action will run
    prereq-pattern: # optional
    # Label to trigger skipping the check
    skip-label: # optional
    
- name: Changelog checker
  # You may pin to the exact commit or the version.
  # uses: Zomzog/changelog-checker@faa4a29ba757082ffcc544bc112ceef80641ca8d
  uses: Zomzog/changelog-checker@v1.2.0_RC1
  with:
    # Changelog fileName
    fileName: # optional, default is CHANGELOG.adoc
    # Label to ignore changelog check
    noChangelogLabel: # optional, default is no changelog
    - name: elixir_bot
  # You may pin to the exact commit or the version.
  # uses: clszzyh/elixir_bot@01972b875405dbe829f13b26194de2822d06f1fe
  uses: clszzyh/elixir_bot@v0.1.5
  with:
    # Github Token
    GITHUB_TOKEN:   
    
- name: Deps Bot
  # You may pin to the exact commit or the version.
  # uses: denosaurs/depsbot@65c7a3d0650af947967e84b7aee9213a6f64f534
  uses: denosaurs/depsbot@v0.8.0
  with:
    # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
    github_token: 
    # Path of your repository
    repo_path: # optional, default is .
    # Relative path in your repository
    path: # optional, default is .
    - name: Backport Bot
  # You may pin to the exact commit or the version.
  # uses: Gaurav0/backport@e7dcef58001f50e30dc76dee13dac320b025c623
  uses: Gaurav0/backport@v1.0.26
  with:
    # Username associated with bot token
    bot_username: 
    # Personal access token of your bot account (should have public_repo access only)
    bot_token: 
    # Token for the GitHub API.
    github_token:
    - name: Fresh-bot
  # You may pin to the exact commit or the version.
  # uses: c-hive/fresh-bot@ba29a363c49fb8f46c21f865ccd9953b3538d68e
  uses: c-hive/fresh-bot@v1
  with:
    # Personal access token with full control of private repositories scope enabled
    GITHUB_TOKEN: 
    - name: slack-user-bot
  # You may pin to the exact commit or the version.
  # uses: Flank/flank@68a4909735a2ecbedcaff735351ad6ee5f63aa38
  uses: Flank/flank@v20.12.0
  with:
    # A slack token that gives permission to act as a user.
    xoxctoken: 
    # The message to send
    message: 
    # Channel to send to
    channel: 
    # Required cookie for auth
    cookie: 
    - name: Auto Issue Bot
  # You may pin to the exact commit or the version.
  # uses: autoissue/autoissuebot@cdd3fda284e211b0ec7ad30dd102211e01e9075e
  uses: autoissue/autoissuebot@v1.1.0
  with:
    # Repository token
    repo-token: 
    # [Number] Overrides the github request default.
    per-page: # optional, default is 30
    - name: CI Fortune Cookie
  # You may pin to the exact commit or the version.
  # uses: vincetse/fortune-cookie-action@54c6e2753474b7212016e231459c390c36ca4524
  uses: vincetse/fortune-cookie-action@v4
  - name: Xanitizer Security Analysis
  # You may pin to the exact commit or the version.
  # uses: RIGS-IT/xanitizer-action@87d13138fb113b727cbe040c744a15a2b4fe5316
  uses: RIGS-IT/xanitizer-action@v1.0.1
  with:
    # String which is used as input for a Xanitizer license file. Note: It is recommended to use a GitHub secret to store the license file content like XANITIZER_LICENSE and access the content in the configuration via the GitHub secret parameter. Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details. Note: If the license is a floating license and a proxy server is used to access the license server, please specify the proxy server settings. If no settings are specified, the settings from the Xanitizer properties file will be used.
    license: # optional
    # Number of attempts to get a license token from the license server. Note: If the used Xanitizer license is a machine bound license, this parameter will be ignored. If the used Xanitizer license is a floating license it may happen that all tokens are in use or the connection to the license server is not available at startup. In such cases, no license token can be requested successfully from the license server to start Xanitizer and the headless process would terminate with a license error. When this parameter is set to a value greater than zero, Xanitizer attempts every minute to request a license token until the specified count has been reached. Setting this parameter to zero disables the repetition.
    licenseServerRetryCount: # optional
    # Relative path under $GITHUB_WORKSPACE where the project was checked out. Note: Please use the same value as for parameter `path` of the configured actions/checkout action (see https://github.com/actions/checkout#usage parameter `path`).
    checkoutPath: # optional
    # The output location of the overview report. This has to be either a list of files or the parameter has to be undefined or empty if no overview reports should be written. Allowed file extensions are: pdf, html, docx.
    overviewReportOutputFile: # optional
    # Comma separated list of output locations of the overview reports. This has to be either a list of files or the parameter has to be undefined or empty if no overview reports should be written. Allowed file extensions are: pdf, html, docx.
    overviewReportOutputFiles: # optional
    # The output location of the findings list report. This has to be either a list of files or the parameter has to be undefined or empty if no findings list reports should be written. Allowed file extensions are: pdf, html, docx, xml, csv, sarif.
    findingsListReportOutputFile: # optional
    # Comma separated list of output locations of the findings list reports. This has to be either a list of files or the parameter has to be undefined or empty if no findings list reports should be written. Allowed file extensions are: pdf, html, docx, xml, csv, sarif. Note: If no report file has been secified, i.e., neither an overview report nor a findings list report, both a Xanitizer-Findings-List.pdf and a Xanitizer-Findings-List.sarif report will be generated in the checkout directory specified by $GITHUB_WORKSPACE with the optional relative parameter `checkoutPath` as default.
    findingsListReportOutputFiles: # optional
    # Boolean flag specifying if only findings with problem classifications are written to the findings list report.
    onlyProblemsInFindingsListReport: # optional, default is true
    # Boolean flag specifying if all the details of a finding are written to the findings list report, e.g. if the output contains all steps of a path. Note: Only relevant if the file extension of the parameter `findingsListReportOutputFile` is xml, html, or sarif.
    generateDetailsInFindingsListReport: # optional, default is true
    # The path to the Xanitizer configuration file of the project that should be analyzed. Either this parameter or the parameter `rootDirectory` may be specified, but not both. Note: If neither the parameter `configFile` nor the parameter `rootDirectory` has been specified, the parameter `rootDirectory` is set to the checkout directory specified by $GITHUB_WORKSPACE with the optional relative parameter `checkoutPath`.
    configFile: # optional
    # The root directory, to be used for default set-ups. Either this parameter or the parameter `configFile` may be specified, but not both. Note: If neither the parameter `configFile` nor the parameter `rootDirectory` has been specified, the parameter `rootDirectory` is set to the checkout directory specified by $GITHUB_WORKSPACE with the optional relative parameter `checkoutPath`.
    rootDirectory: # optional
    # The project name that should be used. Only relevant if the parameter `rootDirectory` is specified. If not given, the simple name of the root directory is used.
    projectName: # optional
    # The directory where to put the generated configuration file. Only relevant if the parameter `rootDirectory` is specified. If not given, the configuration file is generated in the `rootDirectory`.
    configFileDirectory: # optional
    # Boolean flag specifying if an existing config file is to be overwritten. Only relevant if the parameter `rootDirectory` is specified.
    overwriteConfigFile: # optional
    # Boolean flag specifying whether Xanitizer uses NodeJS to compile Angular and TypeScript projects to JavaScript code itself or not. This could be a potential risk if someone has manipulated the external ng or the tsc script. If the code is already compiled to JavaScript, best with a source map, this option can be set to `false` true - enables the compilation of Angular and TypeScript code to JavaScript by Xanitizer itself false - disables the compilation of Angular and TypeScript code to JavaScript by Xanitizer itself and some Xanitizer workspace information will be generated if Angular or Typescript files are found in the project not set - if this option is not set and Angular or Typescript files are found in the project, a Xanitizer workspace error will be generated 
    compileToJavaScript: # optional, default is true
    # Boolean flag specifying if npm audit should be executed. The npm audit APIs can be used to report on known vulnerable node.js libraries. This requires an Internet connection and so has to be allowed explicitly. This is only relevant for NodeJS projects.
    performNodeAudit: # optional, default is true
    # Boolean flag specifying whether the task should fail if there are search paths configured that do not exist.
    haltOnMissingSearchPaths: # optional
    # A comma - separated list of issue groups that will let the task fail if for any of them, a Xanitizer error issue occurs. Possible values are ALL_ERRORS, WORKSPACE_ERRORS, CALL_GRAPH_ERRORS, ANALYSIS_ERRORS, MIGRATION_ERRORS. If the value is not set, this means that issues are not relevant for the success of the task.
    haltOnIssues: # optional
    # Boolean flag specifying whether the task should fail if there are findings with a rating equal or higher than the value defined for `findingsRatingThreshold`.
    haltOnFindings: # optional
    # A rating value. Only used if the parameter `haltOnFindings` is set.
    findingsRatingThreshold: # optional
    # Boolean flag specifying whether the OWASP Dependency Check repository should be updated or not. Note: The OWASP Dependency Check is based on vulnerability data stored in a local repository. It is recommended to update the local OWASP Dependency Check repository on a regular basis via remote access to the National Vulnerability Database (NIST). If a proxy server is used to access the internet, please specify the proxy server settings otherwise the settings from the Xanitizer properties file will be used.
    updateOwaspDependencyCheckRepository: # optional
    # The logging level to be used when running Xanitizer. Values: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL.
    logLevel: # optional
    # Xanitizer`s project data directory, if it is not the default one in <HOME>/.Xanitizer.
    projectDataDirectory: # optional
    # Boolean flag specifying whether the task should fail if there are * NEW * findings with a rating equal or higher than the value defined for `newFindingsRating`.
    haltOnNewFindings: # optional
    # A rating value. Only used if the parameter `haltOnNewFindings` is set.
    newFindingsRatingThreshold: # optional
    # Optional path to the local Maven repository. Note: If no settings are specified, the settings from the Xanitizer properties file will be used.
    mavenRepository: # optional
    # Boolean flag specifying whether a snapshot should be created after parsing and analyzing the current version or not.
    createSnapshot: # optional
    # Optional comment added to the newly created snapshot. Only relevant if the parameter `createSnapshot` is true.
    snapshotComment: # optional
    # The output directory of the project export. Note: If the parameter is undefined or an empty string, the project is not exported.
    exportDirectory: # optional
    # Boolean flag specifying if snapshots should be exported or not. The parameter is only used if an export directory is set. If the parameter is not set or empty, no snapshots are exported.
    exportSnapshots: # optional
    # The passphrase for the project export. The parameter is only used if an export directory is set. If the parameter is not set or empty, the exported project is not encrypted. Note: It is recommended to use a GitHub secret to store the export like XANITIZER_EXPORT_PASSPHRASE and access the content in the configuration via the GitHub secret parameter. Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details.
    exportPassphrase: # optional
    # The path to an exported Xanitizer project archive file. If specified, this project is merged into the current project. This means that all more recent user adaptations, findings and issues are migrated into the current project.
    mergedProject: # optional
    # The passphrase for the merged project. The parameter is only necessary if the parameter `mergedProject` is set and the merged project is encrypted. Note: It is recommended to use a GitHub secret to store the export passphrase like XANITIZER_EXPORT_PASSPHRASE. and access the content in the configuration via the GitHub secret parameter. Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details.
    importPassphrase: # optional
    # Optional proxy server to access the internet to update the OWASP Dependency Check repository or to request a license token from the public license server in case of a floating license via a proxy. Note: If no settings are specified, the settings from the Xanitizer properties file will be used.
    proxyServer: # optional
    # Optional proxy server port.
    proxyPort: # optional
    # Optional proxy server user name.
    proxyUser: # optional
    # Optional proxy server user password.
    proxyPassword: # optional
    - name: Jira Find issue key
  # You may pin to the exact commit or the version.
  # uses: atlassian/gajira-find-issue-key@25176f03aef1ee1edea04179e8d9b629c446869d
  uses: atlassian/gajira-find-issue-key@v2.0.2
  with:
    # Provide a string to extract issue key from
    string: # optional
    # Find from predefined place (should be either 'branch', or 'commits')
    from: # optional, default is commits
    - name: ansible-lint
  # You may pin to the exact commit or the version.
  # uses: ansible/ansible-lint-action@38e9ebdc9c3c71e66e2a3e0a09f0b6c8bc005e46
  uses: ansible/ansible-lint-action@v4.1.0.post0
  - name: Veracode Static Analysis Pipeline Scan and SARIF import
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-pipeline-scan-results-to-sarif@c4e3ac33a116df4b7074d53747d8814e8fdf974b
  uses: veracode/veracode-pipeline-scan-results-to-sarif@v0.1.5
  with:
    # location of the pipeline json result file
    pipeline-results-json: # default is results.json
    # the path to the SARIF file as an output of the transformation
    output-results-sarif: # default is veracode-results.sarif
    # a path prefix conversion before publish in the SARIF file
    source-base-path-1: # optional, default is 
    # a path prefix conversion before publish in the SARIF file
    source-base-path-2: # optional, default is 
    # a path prefix conversion before publish in the SARIF file
    source-base-path-3: # optional, default is 
    # The conversion rule of Veracode findings to GitHub level
    finding-rule-level: # default is 4:3:0
    - name: Android App size difference
  uses: microsoft/android-app-size-diff@v0.32
  with:
    # Path to base apk. This is the app before changes
    baseAppPath: # default is base.apk
    # Label to use for the base app in the report
    baseAppLabel: # optional, default is Base APK
    # Path to target apk. This is the app after changes
    targetAppPath: # default is target.apk
    # Label to use for the target app in the report
    targetAppLabel: # optional, default is Target APK
    # Output file where comparision summary should be written to
    summaryOutputPath: # default is summary.md
    # A comma seperated list of size metrics to include in the summary. Possible values are `apkSize`, `installSize`, `dexFiles`, `arscFile`, `nativeLibs`
    metrics: # optional, default is apkSize, installSize, dexFiles, arscFile, nativeLibs
    # A comma seperated list of thresholds for each of the metrics in bytes. If this is empty, no thresholding will apply. When this is not empty, the task will fail when any of the given thresholds are crossed
    thresholds: # optional, default is 
    # Set to `false` to disable telemetry
    telemetryEnabled: # optional, default is true
    - name: Setup Ruby, JRuby and TruffleRuby
  # You may pin to the exact commit or the version.
  # uses: ruby/setup-ruby@fdcfbcf14ec9672f6f615cb9589a1bc5dd69d262
  uses: ruby/setup-ruby@v1.64.1
  with:
    # Engine and version to use, see the syntax in the README. Reads from .ruby-version or .tool-versions if unset.
    ruby-version: # optional, default is default
    # The version of Bundler to install. Either 'none', 'latest', 'Gemfile.lock', or a version number (e.g., 1, 2, 2.1.4).
For 'Gemfile.lock', the version is determined based on the BUNDLED WITH section from the file Gemfile.lock, $BUNDLE_GEMFILE.lock or gems.locked.
Defaults to 'Gemfile.lock' if the file exists and 'latest' otherwise.

    bundler: # optional, default is default
    # Run "bundle install", and cache the result automatically. Either true or false.
    bundler-cache: # optional, default is false
    # The working directory to use for resolving paths for .ruby-version, .tool-versions and Gemfile.lock.
    working-directory: # optional, default is .
    - name: Build and push Docker images
  # You may pin to the exact commit or the version.
  # uses: docker/build-push-action@4a531fa5a603bab87dfa56578bd82b28508c9547
  uses: docker/build-push-action@v2.2.2
  with:
    # Builder instance
    builder: # optional
    # Build's context is the set of files located in the specified PATH or URL
    context: # optional
    # Path to the Dockerfile
    file: # optional
    # List of build-time variables
    build-args: # optional
    # List of metadata for an image
    labels: # optional
    # List of tags
    tags: # optional
    # Always attempt to pull a newer version of the image
    pull: # optional, default is false
    # Sets the target stage to build
    target: # optional
    # List of extra privileged entitlement (eg. network.host,security.insecure)
    allow: # optional
    # Do not use cache when building the image
    no-cache: # optional, default is false
    # List of target platforms for build
    platforms: # optional
    # Load is a shorthand for --output=type=docker
    load: # optional, default is false
    # Push is a shorthand for --output=type=registry
    push: # optional, default is false
    # List of output destinations (format: type=local,dest=path)
    outputs: # optional
    # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
    cache-from: # optional
    # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
    cache-to: # optional
    # List of secrets to expose to the build (eg. key=value, GIT_AUTH_TOKEN=mytoken)
    secrets: # optional
    # GitHub Token used to authenticate against a repository for Git context
    github-token: # optional, default is ${{ github.token }}
    # List of SSH agent socket or keys to expose to the build
    ssh: # optiona
    - name: Jira Add Comment
  # You may pin to the exact commit or the version.
  # uses: atlassian/gajira-comment@8ec356b5df49f1325653db7ee2da2b59a1d78203
  uses: atlassian/gajira-comment@v2.0.2
  with:
    # Key of the issue to be commented on
    issue: 
    # Comment
    comment: 
    
- name: Veracode Upload And Scan
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-uploadandscan-action@c5e63c8383debb26a0d48250eab75d94327635ba
  uses: veracode/veracode-uploadandscan-action@0.2.1
  with:
    # appname
    appname: # default is ${{ github.repository }}
    # createprofile
    createprofile: # default is true
    # filepath
    filepath: 
    # version
    version: # default is Scan from Github job: ${{ github.run_id }}
    # vid
    vid: 
    # vkey
    vkey: 
    # true or flase
    createsandbox: # optional
    # name of the sandbox
    sandboxname: # optional
    # wait X minutes for the scan to complete
    scantimeout: # optional
    # modules to exclude from module selection
    exclude: # optional
    # modules to include in module selection
    include: # optional
    # business criticality - policy selection
    criticality: # optional
    # filename pattern
    pattern: # optional
    # replacement
    replacement: # optional
    # replacement
    sandboxid: # optional
    # All top level modules
    scanallnonfataltoplevelmodules: # optional
    # platform selected modules
    selected: # optional
    # selected modules like from previous scan
    selectedpreviously: # optional
    # teams
    teams: # optional
    # teams
    toplevel: # optional
    - name: Codacy Analysis CLI
  # You may pin to the exact commit or the version.
  # uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
  uses: codacy/codacy-analysis-cli-action@1.1.0
  with:
    # Run with verbose output
    verbose: # optional
    # API token to retrieve your remote Codacy configuration for the project being analyzed
    project-token: # optional
    # Codacy's API URL, to retrieve your remote Codacy configuration
    codacy-api-base-url: # optional
    # Format of the output file
    format: # optional
    # Send analysis results to an output file
    output: # optional
    # The directory to be analyzed
    directory: # optional
    # Number of tools to run in parallel
    parallel: # optional
    # Maximum number of issues allowed for the analysis to succeed
    max-allowed-issues: # optional
    # The name of the tool to analyze the code
    tool: # optional
    # Maximum time each tool has to execute
    tool-timeout: # optional
    # Upload analysis results to Codacy
    upload: # optional
    # Fail the analysis if any tool fails to run
    fail-if-incomplete: # optional
    # Allow network access for tools
    allow-network: # optional
    # Force files to be readable by changing the permissions before running the analysis
    force-file-permissions: # optional
    # Reduce issue severity by one level, for non-security issues, for compatibility with GitHub's code scanning feature. This option will only have an effect when used in conjunction with '--format sarif'.
    gh-code-scanning-compat: # optional
    - name: Git Anti Virus Scan
  # You may pin to the exact commit or the version.
  # uses: djdefi/gitavscan@0ac3e0d8cb252ec36b446efba83016c6a5583308
  uses: djdefi/gitavscan@2
  with:
    # Full history scan
    full: # optional
    - name: SQLCheck Action
  # You may pin to the exact commit or the version.
  # uses: yokawasa/action-sqlcheck@0637a74e5cb52207e4f02042c093709d0756f129
  uses: yokawasa/action-sqlcheck@v1.3.0
  with:
    # Post comment to PR
    post-comment: # optional, default is true
    # Github Token in order to add comment to PR
    token: # default is 
    # Set of SQL anti-patterns to check: 1,2, or 3
    risk-level: # optional, default is 3
    # Add verbose warnings to SQLCheck analysis result
    verbose: # optional
    # List of file postfix to match ( separator: comma )
    postfixes: # optional, default is sql
    # Path(s) of directory under which the action check any files whether they are part of the repository or not. By default, the action checks only files in PR queries. By specifying directories the action no longer check files in PR queries but files under the directories
    directories: # optional, default is 
    
- name: semgrep-action
  # You may pin to the exact commit or the version.
  # uses: returntocorp/semgrep-action@3038b23eafabf701d6707f4d64edbf033f7df86b
  uses: returntocorp/semgrep-action@v1
  with:
    # Rules and patterns to search for with semgrep.

    config: # optional
    # Access token to post results to the semgrep app.

    publishToken: # optional
    # Deployment ID on semgrep app.

    publishDeployment: # optional
    # Set to 1 if you want a semgrep.sarif file to be written with all semgrep findings.

    generateSarif: # optional
    - name: Setup ANTLR 4 tool
  # You may pin to the exact commit or the version.
  # uses: NiccoMlt/setup-antlr4@f903202e1083cbab3fb69184705c00dc0ccb0fd7
  uses: NiccoMlt/setup-antlr4@v0.0.5
  - name: VirusTotal GitHub Action
  # You may pin to the exact commit or the version.
  # uses: crazy-max/ghaction-virustotal@a3f74cfd584b0658320aec5e94ab6a8d16dca05f
  uses: crazy-max/ghaction-virustotal@v2.4.1
  with:
    # The GitHub token used to create an authenticated client for GitHub API
    vt_api_key: 
    # Newline-delimited list of path globs for asset files to upload for analysis
    files: 
    # If enabled, files will be uploaded to VirusTotal Monitor endpoint
    vt_monitor: # optional, default is false
    # A path relative to current monitor user root folder to upload files
    monitor_path: # optional, default is /
    # If enabled, analysis link(s) will be appended to the release body
    update_release_body: # default is false
    # The GitHub token used to create an authenticated client for GitHub API
    github_token: # optional, default is ${{ github.token }}
    - name: Upload a Build Artifact
  uses: actions/upload-artifact@v2.2.2
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    - name: Gradle Wrapper Validation
  # You may pin to the exact commit or the version.
  # uses: gradle/wrapper-validation-action@e2c57acffb2c9aa5a8dc6eda2bbae0b6e495bd4c
  uses: gradle/wrapper-validation-action@v1.0.3
  with:
    # Minimum expected wrapper JAR files
    min-wrapper-count: # optional, default is 1
    # Allow snapshot Gradle versions
    allow-snapshots: # optional, default is false
    # Allow arbitrary checksums, comma separated
    allow-checksums: # optional, default is 
    - name: Get Runs From Weights & Biases
  # You may pin to the exact commit or the version.
  # uses: machine-learning-apps/wandb-action@ea8c99cb8230d7ec3d1bbe087a5f1853843b93b9
  uses: machine-learning-apps/wandb-action@1.1
  - name: Get Secret Manager secrets
  # You may pin to the exact commit or the version.
  # uses: google-github-actions/get-secretmanager-secrets@5e4a83ba7e0aa9508252559001cdefb8adb7bbb9
  uses: google-github-actions/get-secretmanager-secrets@v0.2.1
  with:
    # Comma-separated or newline-separated list of secrets to fetch. Secrets
must be of the format <project>/<secret> or <project>/<secret>/<version>.
    secrets: 
    # Service account key to use for authentication. This should be the JSON
formatted private key which can be exported from the Cloud Console. The
value can be raw or base64-encoded.
    credentials: # optional
  - name: Verja CVE reports
  # You may pin to the exact commit or the version.
  # uses: digitalist-se/verja@2faceeab0f47ac022c875005a9a0879a811b1878
  uses: digitalist-se/verja@v1.5.1  
  - name: Security Badger
  # You may pin to the exact commit or the version.
  # uses: nicklemmon/security-badger@b470062eea5d633d17f669cc0e1abc83617c149f
  uses: nicklemmon/security-badger@v0.0.13-alpha
  with:
    # Slack Channel that will see posted Security Badger messages
    slackChannel: 
    - name: GP Security Scan
  # You may pin to the exact commit or the version.
  # uses: whitesource/GitHubPackagesSecurityAction@b5f36d0e95550dd5699e967862e882fcee19fa2c
  uses: whitesource/GitHubPackagesSecurityAction@19.10.2
  with:
    # GitHub access token with read/write privileges to GitHub Packages
    gp-token: 
    # WS environment destination url
    ws-destination-url: 
    # WS organization api key
    ws-api-key: 
    # WS user key
    ws-user-key: 
    # WS product key to publish results to
    ws-product-key: # optional
    # Whether to print the results report
    print-scan-report: # optional
    # Whether to print debug logs
    actions_step_debug: # optional
      - name: Aqua Security Trivy
  # You may pin to the exact commit or the version.
  # uses: aquasecurity/trivy-action@2b5de510862c22b735aa586acbafe850cfe75148
  uses: aquasecurity/trivy-action@0.0.8
  with:
    # image reference
    image-ref: 
    # exit code when vulnerabilities were found
    exit-code: # optional, default is 0
    # ignore unfixed vulnerabilities
    ignore-unfixed: # optional
    # severities of vulnerabilities to be displayed
    severity: # optional, default is UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
    # output format (table, json, template)
    format: # optional, default is table
    # use an existing template for rendering output (@/contrib/sarif.tpl, @/contrib/gitlab.tpl, @/contrib/junit.tpl
    template: # optional, default is 
    # writes results to a file with the specified file name
    output: # optional, default is 
    - name: Synopsys Intelligent Security Scan
  # You may pin to the exact commit or the version.
  # uses: synopsys-sig/intelligent-security-scan@6940a88f5a0062304657dd62e7d3cee3b5bc9e57
  uses: synopsys-sig/intelligent-security-scan@v1
  with:
    # The server Host URL for Intelligent Scan Engine eg http://localhost:1111 or https://21b7.ngrok.io
    ioServerUrl: 
    # The server password for Intelligent Scan Engine
    ioServerToken: 
    # This file includes configuration of AST tools. eg SCA/SAST/IAST
    ioManifest: # optional, default is SecurityManifest.yml
    # The server Host URL for Intelligent Scan Workflow Engine eg http://localhost:1111 or https://21b7.ngrok.io
    workflowServerUrl: 
    # The server password for Intelligent Scan Engine
    workflowServerToken: 
    # The workflow jar version to retrieve for Intelligent Scan Engine
    workflowVersion: # optional, default is 2020.11
    # This file includes details about which tools to run based on IO prescription
    workflowManifest: # optional, default is WorkflowTemplate.yml
    # This file includes details about the kind of application being scanned
    applicationManifest: # optional, default is ApplicationManifest.yml
    # Additional arguments required for workflow engine arguments
    additionalWorkflowArgs: 
    # Additional arguments required for workflow engine arguments
    stage: # default is IO
    - name: Publish security assessments to Azure
  uses: Azure/publish-security-assessments@v0
  with:
    # The artifact that was scanned. Supported values - “containerImage”
    artifact-type: # default is containerImage
    # Unique identifier for the artifact. For artifact-type “containerImage”, the action will take the image digest by default by using docker cli
    artifact-id: # optional
    # ASC subscription token which can be found on the ASC portal
    subscription-token: 
    # Instrumentation key of the application insights instance
    instrumentation-key: # optional
    # Connection string of the application insights instance
    connection-string: # optional
    # The tool used to scan the artifact. Supported values - "trivy"
    scan-provider: 
    # Path to the file containing scan results
    scan-results-path: 
    - name: cfn-security
  # You may pin to the exact commit or the version.
  # uses: grolston/cfn-security@4ea98071812f299bf7f446e3b63b452d19088a4e
  uses: grolston/cfn-security@v0.1.0
  - name: 42Crunch REST API Static Security Testing
  # You may pin to the exact commit or the version.
  # uses: 42Crunch/api-security-audit-action@48f468ee3cbd6ef8e5d8307fba9177ac0f6b87b2
  uses: 42Crunch/api-security-audit-action@v1
  with:
    # The API token to access 42Crunch Platform. Please create free account at https://platform.42crunch.com/register and follow hese steps to configure API_TOKEN https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm
    api-token: # optional
    # A name for the API collection
    collection-name: # optional, default is github
    # Minimum score for OpenAPI files.
    min-score: # optional, default is 75
    # 
    github-token: # optional, default is ${{ github.token }}
    # Upload results to Github Code Scanning
    upload-to-code-scanning: # optional, default is false
    # Do not fail the action even if the faiures were detected in the API contract
    ignore-failures: # optional, default is false
    - name: SecurityCodeScan
  # You may pin to the exact commit or the version.
  # uses: security-code-scan/security-code-scan-results-action@e22a28aa0bb031753752f2716d0b4654bd0fdcee
  uses: security-code-scan/security-code-scan-results-action@v1.0
  with:
    # The output directory where SARIF files should be collected.
    sarif_directory: # optional, default is ../results
    - name: golang-security-action
  # You may pin to the exact commit or the version.
  # uses: Ynniss/golang-security-action@cb6559433c01cbe2c6d357d7c731eefe03641ad3
  uses: Ynniss/golang-security-action@v0.1.3
  with:
    # path to the config file gosec will use
    CONF_PATH: # optional
    # path to the code that will be analyzed
    CODE_PATH: # default is .
     name: Update Gradle Wrapper
  # You may pin to the exact commit or the version.
  # uses: rahulsom/gradle-up@600c5f46102213d08bd027c2181c0c30ea7565cb
  uses: rahulsom/gradle-up@v0.1.0
  - name: SCP action wrapper
  # You may pin to the exact commit or the version.
  # uses: lBeJIuk/scp_action@3e4f542ee461ad1245d8af9477956cd352a2c6c4
  uses: lBeJIuk/scp_action@v1
  with:
  - name: DotCover Github Actions wrapper
  # You may pin to the exact commit or the version.
  # uses: dodopizza/dotcover-action@6a8b4aee43e15d81ebc296bf6d6a4cacb6d2f4cb
  uses: dodopizza/dotcover-action@v1
  with:
    # Command to pass to DotCover
    dotCoverCommand: # optional
    # Path to a config file
    configFile: # optional
    - name: GitHub Action for Serverless Framework
  # You may pin to the exact commit or the version.
  # uses: aaronpanch/action-serverless@624ff9350e298816649b96aa6f0dc5bbbd27ec59
  uses: aaronpanch/action-serverless@v1.0.0
  - name: GitHub Action for Deno
  # You may pin to the exact commit or the version.
  # uses: denolib/deno-action@3dba16f4c69fc2de21d9e9792b70923a982fe273
  uses: denolib/deno-action@0.19.0
  - name: action-docker-make
  # You may pin to the exact commit or the version.
  # uses: fi-ts/action-docker-make@e364a3658edbe9c761a6c0e5e1dff1e1a4e3fa94
  uses: fi-ts/action-docker-make@v0.1.3
  with:
    # username for the docker hub
    username: # optional
    # password for the docker hub
    password: # optional
    # arguments to docker-make
    args: # optional
    
  
